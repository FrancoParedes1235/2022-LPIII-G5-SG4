/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Project/Maven2/JavaApp/src/main/java/${packagePath}/${mainClassName}.java to edit this template
 */

package com.mycompany.metodosgenericos;

/**
 *
 * @author user
 */
public class MetodosGenericos {

    public static void main(String[] args) {
        
       /* A. Para el caso del ejercicio del método imprimirArray añade el código necesario
            para verificar si funciona con arreglos de tipo Float y de tipo Boolean.*/
       
        Float[] floatArray = {1.1f, 2.2f, 3.3f, 4.4f, 5.5f};
        Boolean[] booleanArray = {true, false, true, false};
        
        
        System.out.printf("Array floatArray contiene:%n");
        imprimirArray(floatArray);
        
        System.out.printf("Array BooleanArray contiene:%n");
        imprimirArray(booleanArray);
        
       /*b. Para el caso del ejercicio del método maximo crea un nuevo método llamado
            minimo que reciba 4 argumentos de tipos Integer, Double y String y nos devuelva
            cuál es el elemento menor.
        */ 
       
       System.out.printf("El Minimo de %d, %d y %d es %d%n%n",
                          3, 4, 5, minimo(3,4,5));
       
       /*2. Sobrecargar el método imprimirArray visto anteriormente en el marco teórico para que
            este pueda tomar 2 argumentos adicionales de tipo entero, limiteInferior y limiteSuperior.
            Una llamada a este método sólo imprimirá una porción designada del arreglo. Validar
            limiteInferior y limiteSuperior. Si cualquiera de ellos está fuera de rango, el método
            sobrecargado imprimirArray debe lanzar una excepción una excepción propia llamada
            LimiteInvalidoException, de lo contrario deberá retornar la impresión del número de
            elementos solicitado.  
       */
       
       imprimirArray(floatArray,0,3);
       
       
       
        
    }
   public static <T> void imprimirArray(T[] inputArray) {
 
        for(T elemento : inputArray)
       System.out.printf("%s ",elemento);

       System.out.println();


 }
   

   
   public static Comparable minimo (Comparable x, Comparable y, Comparable z){
       
    Comparable min = x;
    if(y.compareTo(x) < 0)
     min = y;
     if(z.compareTo(y) < 0)
     min = z;

     return min;
}
   
      public static <T> void imprimirArray(T[] inputArray, int limiteInferior, int limiteSuperior) {
 
      for (int i = limiteInferior ; i < limiteSuperior; i++) {
           
            System.out.print(inputArray[i]);
            System.out.print(", ");
      }
 }



 }

  
